{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","props","color","Error","text","ImageContainer","Image","bgUrl","Rating","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","Message","array","bool","api","axios","create","baseURL","params","api_key","language","TVApi","topRated","get","airingToday","showDetail","append_to_response","search","term","query","encodeURIComponent","moviesApi","movieDetail","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","func","SearchContainer","event","preventDefault","searchByTerm","target","a","async","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","TVPresenter","original_name","first_air_date","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","object","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8554b568.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 16px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-bottom: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.prototype = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">⏰</span>\n    </Container>\n);\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container  =  styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Error = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nError.prototype = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Error;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst ImageContainer = styled.div``;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={\n                        imageUrl\n                        ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                        : require(\"../assets/noPosterSmall.png\")\n                    }\n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                    ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>\n                {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nexport default Poster;\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n    <>\n        <Helmet>\n            <title>Movies | Nomflix</title>\n        </Helmet>\n    {loading ? (\n        <Loader />\n    ) : (\n        <Container>\n            <Helmet>\n                <title>Movies | Nomflix</title>\n            </Helmet>\n            {nowPlaying && nowPlaying.length > 0 && (\n                <Section title=\"Now Playing\">\n                    {nowPlaying.map(movie => \n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                    )}\n                </Section>\n            )}\n            {upcoming && upcoming.length > 0 && (\n                <Section title=\"Upcoming Playing\">\n                    {upcoming.map(movie => \n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                    )}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Playing\">\n                    {popular.map(movie => \n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                    )}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n    )}\n    </>\n);\n\nHomePresenter.prototype = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"94abad8b6e42cfebed4f0232a57158d4\",\n        language: \"en-US\"\n    }\n});\n\nexport const TVApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id =>\n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term => \n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => \n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term => \n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: nowPlaying }\n            } = await moviesApi.nowPlaying();\n            const {\n                data: { results: upcoming }\n            } = await moviesApi.upcoming();\n            const {\n                data: { results: popular }\n            } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch {\n            this.setState({\n                error: \"Can't find movie information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter \n                nowPlaying={nowPlaying} \n                upcoming={upcoming} \n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, loading, error, searchTerm, handleSubmit, updateTerm }) => (\n    <Container>\n        <Helmet>\n            <title>Search | Nomflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input \n                placeholder=\"Search Movies or TV shows...\" \n                value={searchTerm}\n                onChange={updateTerm} \n            />\n        </Form>\n        {loading ? (\n            <Loader /> \n        ) : (\n            <>\n            {movieResults && movieResults.length > 0 && (\n                <Section title=\"Movie Result\">\n                    {movieResults.map(movie => (\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n                <Section title=\"Movie Result\">\n                    {tvResults.map(show => (\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_title}\n                            rating={show.vote_average}\n                            year={show.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n            {tvResults &&\n                movieResults &&\n                tvResults.length === 0 &&\n                movieResults.length === 0 && (\n                    <Message text=\"Nothing found\" color=\"#95a5a6\" />\n                )\n            }\n            </>\n        )}\n    </Container>\n);\n\nSearchPresenter.prototype = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, TVApi } from \"api\";\n\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = event => {\n        const { \n            target: { value } \n        } = event;\n        \n        this.setState({\n            searchTerm: value\n        })\n    };\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const { \n                data: { results: movieResults }\n            } = await moviesApi.search(searchTerm);\n            const { \n                data: { results: tvResults }\n            } = await TVApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        } catch {\n            this.setState({\n                error: \"Can't find search result.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n        return (\n            <SearchPresenter \n                movieResults={movieResults} \n                tvResults={tvResults} \n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 5px solid \n        ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom .5 ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({ location: {pathname} }) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n        <Helmet>\n            <title>TV Shows | Nomflix</title>\n        </Helmet>\n        {loading? (\n            <Loader />\n        ) : (\n            <Container>\n                {topRated && topRated.length > 0 && (\n                    <Section title=\"Top Rated Shows\">\n                        {topRated.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Shows\">\n                        {topRated.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {airingToday && airingToday.length > 0 && (\n                    <Section title=\"Airing Today Shows\">\n                        {airingToday.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0, 4)}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n            </Container>\n        )}\n    </>\n);\n\nTVPresenter.prototype = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { TVApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    };\n\n    async componentDidMount() {\n        \n        try {\n            const {\n                data: { results: topRated }\n            } = await TVApi.topRated();\n            const {\n                data: { results: popular }\n            } = await TVApi.popular();\n            const {\n                data: { results: airingToday }\n            }  = await TVApi.airingToday();\n            this.setState({ topRated, popular, airingToday });\n            \n        } catch {\n            this.setState({\n                error: \"Can't find TV information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n    \n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\n\n\nconst DetailPresenter = ({ result, loading, error }) => \n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | Nomflix</title>\n            </Helmet>\n            <Loader />\n        </>\n    ) : (\n        <Container>\n            <Helmet>\n                <title>\n                {result.original_title ? result.original_title : result.original_name}{\" \"}\n                | Nomflix\n                </title>\n            </Helmet>\n        <Backdrop\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n            <Cover\n            bgImage={\n                result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/noPosterSmall.png\")\n            }\n            />\n            <Data>\n                <Title>\n                    {result.original_title\n                    ? result.original_title\n                    : result.original_name}\n                </Title>\n                <ItemContainer>\n                    <Item>\n                    {result.release_date\n                        ? result.release_date.substring(0, 4)\n                        : result.first_air_date.substring(0, 4)}\n                    </Item>\n                    <Divider>•</Divider>\n                    <Item>\n                    {result.runtime ? result.runtime : result.episode_run_time[0]} min\n                    </Item>\n                    <Divider>•</Divider>\n                    <Item>\n                    {result.genres &&\n                        result.genres.map((genre, index) =>\n                        index === result.genres.length - 1\n                            ? genre.name\n                            : `${genre.name} / `\n                        )}\n                    </Item>\n                </ItemContainer>\n                <Overview>{result.overview}</Overview>\n            </Data>\n        </Content>\n        </Container>\n    );\n\nDetailPresenter.prototype = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, TVApi } from \"api\";\n\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const { \n            match: { \n                params: { id }  \n            },\n            history: { push },\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({ \n                    data: result\n                } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({ \n                    data: result\n                } = await TVApi.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find anything.\" });\n        } finally {\n            this.setState({ loading: false, result });\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        return (\n            <DetailPresenter \n                result={result} \n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"../Routes/Search\";\nimport Header from \"Components/Header\";\nimport TV from \"Routes/TV\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" exact component={TV} />\n                <Route path=\"/search\" exact component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n)\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color:rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, {Component} from 'react';\nimport Router from './Router';\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <Router />\n                <GlobalStyles />\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}